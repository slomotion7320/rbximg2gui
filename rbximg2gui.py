import argparse, sys
from PIL import Image, ImageSequence
from timestamp import cleantimestamp

ABOUT_TEXT = """#######################################
#            rbximg2gui.py            #
#                                     #
#     Thanks to: Alex Clark - PIL     #
#    github.com/kmunday/rbximg2gui    #
#######################################"""

def OpenImage(fn):
	print("Opening image...")
	try:
		i = Image.open(fn)
		return i
	except:
		print("Failed to open image. Quitting...")
		quit()

def GetRes(i):
	print("Getting image resolution...")
	try:
		pixels = i.load()
		w, h = i.size	
		print(f"Resolution is {w}x{h}.")
		return w, h
	except:
		print("Failed to get resolution. Quitting...")
		quit()

def GetPixels(i):
	print("Getting pixels.")
	try:
		pxs = i.load()
		w, h = GetRes(i)
		a_pxs = []
		for x in range(w):
			for y in range(h):
				c_px = pxs[x, y]
				a_pxs.append(c_px)
		return a_pxs
	except:
		print("Failed to get pixels. Quitting...")
		quit()

def GenScript(i, fn):
	if i.is_animated:
		w, h = GetRes(i)
		fdata = []
		x = 1
		for f in ImageSequence.Iterator(i):
			f_pxs = GetPixels(f)
			if x != 1:
				fdata.append(f_pxs)
			x += 1
		print("Creating new file...")
		f = open(f"{fn}.lua", "w")
		print("Writing to file...")
		f.write("""--[[ Script Generated by rbximg2gui.py 
	 https://github.com/kmunday/rbximg2gui
	 Payload: Billboard GUI Animated GIF]]--\n""")
		f.write("p = {")
		for fr in fdata:
			f.write("{")
			for p in fr:
				r,g,b = str(p[0]),str(p[1]),str(p[2])
				f.write("{" + f"{r}, {g}, {b}" + "}, ")
			f.write("},")
		f.write("}\n")
		f.write(f"""w,h = {w},{h}
f1 = p[1]
g = Instance.new("BillboardGui")
g.Parent = workspace
g.Name = ""
g.Size = UDim2.new(0,{w},0,{h})
g.AlwaysOnTop = true
pix = 1
for w2 = 1,w do
	for h2 = 1,h do
		f = Instance.new("Frame")
		f.Parent = g
		f.Name = tostring(pix)
		f.BackgroundColor3 = Color3.fromRGB(f1[pix][1], f1[pix][2], f1[pix][3])
		f.BorderSizePixel = 0
		f.Size = UDim2.new(0,1,0,1)
		f.Position = UDim2.new(0,w2-1,0,h2-1)
		pix = pix + 1
	end
	wait()
end

while wait() do
	for fn, f in ipairs(p) do
		for pn, px in ipairs(f) do
			g[tostring(pn)].BackgroundColor3 = Color3.fromRGB(px[1], px[2], px[3])
		end
		wait()
	end
end""")
		f.close()		
	else:
		w, h = GetRes(i)
		pix = GetPixels(i)
		print("Creating new file...")
		f = open(f"{fn}.lua", "w")
		print("Writing to file...")
		f.write("""--[[ Script Generated by rbximg2gui.py 
	 Authored by Kyle Munday 
	 https://github.com/kmunday/rbximg2gui
	 Payload: Billboard GUI Still Image]]--\n""")
		f.write("p = {")
		for p in pix:
			r,g,b = str(p[0]),str(p[1]),str(p[2])
			f.write("{" + f"{r}, {g}, {b}" + "}, ")
		f.write("}\n")
		f.write(f"""w,h = {w},{h}
	g = Instance.new("BillboardGui")
	g.Parent = workspace
	g.Name = ""
	g.Size = UDim2.new(0,{w},0,{h})
	pix = 1
	for w2 = 1,w do
		for h2 = 1,h do
			f = Instance.new("Frame")
			f.Parent = g
			f.Name = tostring(pix)
			f.BackgroundColor3 = Color3.fromRGB(p[pix][1], p[pix][2], p[pix][3])
			f.BorderSizePixel = 0
			f.Size = UDim2.new(0,1,0,1)
			f.Position = UDim2.new(0,w2-1,0,h2-1)
			pix = pix + 1
		end
		wait()
	end""")
		f.close()

if __name__ == "__main__":
	try:
		parser = argparse.ArgumentParser(description="Convert an image file to a Roblox GUI.", formatter_class=argparse.RawDescriptionHelpFormatter)
		parser.add_argument("-i", metavar="filename", help="Input an image file to convert.")
		parser.add_argument('--about', help="About", action="store_true")
		arguments = parser.parse_args()
		if arguments.about:
			print(ABOUT_TEXT)
			quit()
		if arguments.i:
			Image = OpenImage(arguments.i)
			Timestamp = cleantimestamp()
			Filename = f"{arguments.i}_script_{Timestamp}"
			try:
				print("Generating script...")
				GenScript(Image, Filename)
				print(f"Saved file to {Filename}.lua.")
			except:
				print("Failed to generate script. Quitting...")
				quit()
		else:
			print("Please input a filename to convert.")
			quit()
	except KeyboardInterrupt:
		print("Signal Interrupt! Exiting...", file=sys.stderr)
		sys.exit(0)
	except Exception:
		print("Error: {}".format(sys.exc_info()[0].__name__))
